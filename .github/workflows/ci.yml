name: CI

# on:
#   push:
#     tags:
#       - '*'

on: [push, pull_request]

jobs:

  test:
    name: Node ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x, 14.x]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache
      id: cache-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ matrix.node-version }}-${{ runner.OS }}-build-${{ hashFiles('package.json') }}
    - name: Install
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: npm install
    - name: Test
      run: npm test

  docker:
    name: Docker
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Build
      run: docker build -t node-release .
    - name: Save
      # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      run: docker save node-release | gzip > image.tar.gz
    - name: Upload
      uses: actions/upload-artifact@v2
      with:
        name: docker-image-${{ github.sha }}.tgz
        path: image.tar.gz

  publish:
    name: Publish
    needs: [test,docker]
    runs-on: ubuntu-latest
    # if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    steps:

    - name: Publish
      run: echo "Releasing ${{ github.ref }} as ${GITHUB_REF/refs\/tags\/v/}"

    - name: Docker Image Download
      uses: actions/download-artifact@v2
      with:
        name: docker-image-${{ github.sha }}.tgz
    - name: Docker Image Load
      run: gunzip -c image.tar.gz | docker load && rm image.tar.gz
    - name: Docker Images
      run: docker images
    - name: Docker Image Publish
      run: echo "TBD"

    - name: Checkout
      uses: actions/checkout@v2
    - name: Publish to NPM
      env:
        NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      run: npm publish --access=public

  expire:
    name: Cleanup
    runs-on: ubuntu-latest
    steps:
    - name: Expire
      uses: kolpav/purge-artifacts-action@v1
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        expire-in: 1hour
