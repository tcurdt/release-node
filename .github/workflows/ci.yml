name: ci

on:
  - push
  - pull_request

env:
  project: 'release-node'

jobs:
  test:
    strategy:
      matrix:
        node-version: [ 14.x ]
        os: [ ubuntu-latest ]
    runs-on: ${{ matrix.os }}
    steps:

    - name: Checkout
      uses: actions/checkout@v2

    - name: Setup Node ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Cache
      id: cache-modules
      uses: actions/cache@v2
      with:
        path: node_modules
        key: ${{ matrix.node-version }}-${{ runner.OS }}-build-${{ hashFiles('package.json') }}

    - name: Install
      if: steps.cache-modules.outputs.cache-hit != 'true'
      run: npm install

    - name: Test
      run: npm test

  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    needs: [ test ]
    runs-on: ubuntu-latest
    steps:

      - name: Version
        uses: tcurdt/action-verify-version-npm@master

      # - name: Download
      #   uses: actions/download-artifact@v2
      #   with:
      #     path: artifacts

      # - name: Archives
      #   run: find artifacts -mindepth 1 -maxdepth 1  -exec tar -C {} -cvzf {}.tgz . \;

      - name: Release
        uses: softprops/action-gh-release@v1
        # with:
        #   files: |
        #     artifacts/*.tgz
        env:
          GITHUB_TOKEN: ${{ secrets.PAT }}
